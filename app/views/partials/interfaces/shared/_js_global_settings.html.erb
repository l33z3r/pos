<script type="text/javascript">
  
  //if we pass this param, we clear our local data, this is mainly used in the mobile app
<% if params[:reset_local_storage] == "true" %>
    clearLocalStorageAndCookies();
<% end %>
  
  //console.log("Current outlet id: <%=session[:current_outlet_id]%>");
  
  //interface
  var currentInterface = "<%= current_interface %>";
  
  //load the setting for bypass pin
  var bypassPin = <%= GlobalSetting.parsed_setting_for GlobalSetting::BYPASS_PIN, current_outlet %>;
    
  //are we allowing bypassing of open orders for z totals on this terminal
  var bypassOpenOrdersForCashTotal = <%= GlobalSetting.parsed_setting_for GlobalSetting::BYPASS_OPEN_ORDERS_FOR_CASH_TOTAL, current_outlet, {:fingerprint => @terminal_fingerprint} %>;
    
  //clock format
  var clockFormat = "<%= GlobalSetting.parsed_setting_for GlobalSetting::CLOCK_FORMAT, current_outlet %>";
    
  var defaultJSDateFormat = "";
  var defaultJSTimeFormat = "";
    
  if(clockFormat == "12") {
    defaultJSDateFormat = "hh:mm dd/MM/yyyy";
    defaultJSTimeFormat = "hh:mm";
  } else {
    defaultJSDateFormat = "HH:mm dd/MM/yyyy";
    defaultJSTimeFormat = "HH:mm";
  }
  
  //licence expired screen?
  var showLicenceExpiredScreen = <%= GlobalSetting.parsed_setting_for GlobalSetting::SHOW_LICENCE_EXPIRED_SCREEN, current_outlet %>;
  
  //is tax chargable
  var taxChargable = <%= @tax_chargable %>;
   
  var taxLabel = "<%= @tax_label %>";
   
  //global tax rate
  var globalTaxRate = <%= GlobalSetting.parsed_setting_for GlobalSetting::GLOBAL_TAX_RATE, current_outlet %>;
   
  var printVatReceipt = <%= GlobalSetting.parsed_setting_for GlobalSetting::PRINT_VAT_RECEIPT, current_outlet %>;
   
  var taxNumber = "<%= GlobalSetting.parsed_setting_for GlobalSetting::TAX_NUMBER, current_outlet %>";
  
  //service charge label
  var serviceChargeLabel = "<%= @service_charge_label %>";
  
  var globalDefaultServiceChargePercent = <%= GlobalSetting.parsed_setting_for GlobalSetting::DEFAULT_SERVICE_CHARGE_PERCENT, current_outlet %>;
  
  //default payment method
  var defaultPaymentMethod = "<%= PaymentMethod.load_default(current_outlet).name.downcase %>";
   
  var cashPaymentMethodName = "<%= PaymentMethod::CASH_PAYMENT_METHOD_NAME %>";
  var loyaltyPaymentMethodName = "<%= PaymentMethod::LOYALTY_PAYMENT_METHOD_NAME %>";
  var accountPaymentMethodName = "<%= PaymentMethod::ACCOUNT_PAYMENT_METHOD_NAME %>";
   
  //load the dynamically set currency symbol
  var dynamicCurrencySymbol = "<%= @currency_symbol %>";
  
  //load the dynamically set screen that appears after a sale and login screen
  var defaultHomeScreen = <%= GlobalSetting.parsed_setting_for GlobalSetting::DEFAULT_HOME_SCREEN, current_outlet, {:fingerprint => @terminal_fingerprint} %>;
  var defaultPostLoginScreen = <%= GlobalSetting.parsed_setting_for GlobalSetting::DEFAULT_POST_LOGIN_SCREEN, current_outlet %>;
  var LOGIN_SCREEN = <%= GlobalSetting::LOGIN_SCREEN %>;
  var MENU_SCREEN = <%= GlobalSetting::MENU_SCREEN %>;
  var TABLES_SCREEN = <%= GlobalSetting::TABLES_SCREEN %>;
  
  var menuScreenType = <%= @menu_screen_type %>;
  var RESTAURANT_MENU_SCREEN = <%= GlobalSetting::RESTAURANT_MENU_SCREEN %>;
  var RETAIL_MENU_SCREEN = <%= GlobalSetting::RETAIL_MENU_SCREEN %>;
  var CUSTOMER_MENU_SCREEN = <%= GlobalSetting::CUSTOMER_MENU_SCREEN %>;
  
  //this is for the order ready notifications on mobile
  var lastOrderReadyNotificationTime = <%= now_millis %>;
  
  var autoPrintReceipt = <%= @auto_print_receipt %>;
  
  var receiptMessage = "<%= raw escape_javascript((GlobalSetting.parsed_setting_for(GlobalSetting::RECEIPT_MESSAGE, current_outlet))) %>";

  var customReceiptFooters = {};

<% current_outlet.receipt_footers.all.each do |rf| %>
    customReceiptFooters[<%=rf.id%>] = {"name" : "<%=rf.name%>", "content" : "<%= raw escape_javascript(rf.content) %>"};
<% end %>
      
  var businessInfoMessage = "<%= raw escape_javascript((GlobalSetting.parsed_setting_for(GlobalSetting::BUSINESS_INFO_MESSAGE, current_outlet))) %>";

  var defaultDiscountPercent = "<%= Discount.load_default(current_outlet).percent %>";
  
  var terminalID = "<%=@terminal_id%>";
  
  var pollingAmount = <%= GlobalSetting.parsed_setting_for GlobalSetting::POLLING_INTERVAL_SECONDS, current_outlet %> * 1000;
  var pollingMinSeconds = <%= GlobalSetting::POLLING_MIN_SECONDS %>;
  var pollingMaxSeconds = <%= GlobalSetting::POLLING_MAX_SECONDS %>;
  
  var using_mobile = <%= mobile_device? ? "true" : "false" %>;
  
  var doBeep = <%= GlobalSetting.parsed_setting_for GlobalSetting::DO_BEEP, current_outlet, {:fingerprint => @terminal_fingerprint} %>;
  
  var railsEnvironment = "<%= ENV['RAILS_ENV'] %>";
  
  var kioskMode = <%= CUSTOM_CONFIG["in_kiosk_mode"] %>;
  var overrideKiosk = <%= params["override_kiosk"] or params["ok"] ? true : false %>;
  
  var showPrintFrame = <%= params["show_print_frame"] or params["spf"] ? true : false %>;
  
  //business info
  var business_name = "<%= @business_name %>";
  var business_address = "<%= @business_address %>";
  var business_telephone = "<%= @business_telephone %>";
  var business_fax = "<%= @business_fax %>";
  var business_email_address = "<%= @business_email_address %>";

<% @display = Display.load_default(current_outlet) unless @display %>
    
  var selectedDisplayId = <%= @display.id %>;
    
  //we need some button ids to mark them as selected and set permissions etsc
  var modifyOrderItemButtonID = "<%= ButtonMapper::MODIFY_ORDER_ITEM_BUTTON %>";
  var addNoteButtonID = "<%= ButtonMapper::ADD_NOTE_BUTTON %>";
  var tablesButtonID = "<%= ButtonMapper::TABLES_BUTTON %>";
  var discountButtonID = "<%= ButtonMapper::DISCOUNT_BUTTON %>";
  var changePriceButtonID = "<%= ButtonMapper::CHANGE_PRICE_BUTTON %>";
  var removeItemButtonID = "<%= ButtonMapper::REMOVE_ITEM_BUTTON %>";
  var toggleMenuItemDoubleModeButtonID = "<%= ButtonMapper::TOGGLE_MENU_ITEM_DOUBLE_BUTTON %>";
  var toggleMenuItemHalfModeButtonID = "<%= ButtonMapper::TOGGLE_MENU_ITEM_HALF_BUTTON %>";
  var toggleMenuItemStandardPriceOverrideModeButtonID = "<%= ButtonMapper::TOGGLE_MENU_ITEM_STANDARD_PRICE_OVERRIDE_BUTTON %>";
  var oiaButtonID = "<%= ButtonMapper::MODIFY_ORDER_ITEM_BUTTON %>";
  var courseNumButtonID = "<%= ButtonMapper::COURSE_BUTTON %>";
  var voidOrderItemButtonID = "<%= ButtonMapper::VOID_ORDER_ITEM_BUTTON %>";
  var priceChangeButtonID = "<%= ButtonMapper::CHANGE_PRICES_BUTTON %>";
  var toggleProductInfoButtonID = "<%= ButtonMapper::PRODUCT_INFO_POPUP_BUTTON %>";
  var toggleTrainingModeButtonID = "<%= ButtonMapper::TRAINING_MODE_TOGGLE_BUTTON %>";
  var deliveryButtonID = "<%= ButtonMapper::DELIVERY_BUTTON %>";
  var changeCostPriceButtonID = "<%= ButtonMapper::CHANGE_COST_PRICE_BUTTON %>";
  var editLoyaltyPointsButtonID = "<%= ButtonMapper::EDIT_LOYALTY_POINTS_BUTTON %>";
  var cashOutButtonID = "<%= ButtonMapper::CASH_OUT_BUTTON %>";
  
  var updateStockType = <%= StockTransaction::STOCK_UPDATE %>;
  var transferStockType = <%= StockTransaction::STOCK_TRANSFER %>;
  
  var localPrinterID = <%= GlobalSetting.parsed_setting_for GlobalSetting::LOCAL_PRINTER_ID, current_outlet, {:fingerprint => @terminal_fingerprint} %>;
  
  var creditCardChargeServiceIP = "<%= @credit_card_charge_service_ip %>";
  var creditCardTerminalIP = "<%= @credit_card_terminal_ip %>";
  var creditCardTerminalPort = "<%= GlobalSetting.parsed_setting_for GlobalSetting::CREDIT_CARD_TERMINAL_PORT, current_outlet, {:fingerprint => @terminal_fingerprint} %>";
  
  var allDevicesOrderNotification = <%= GlobalSetting.parsed_setting_for GlobalSetting::All_DEVICES_ORDER_NOTIFICATION, current_outlet %>;
  
  //these variables are used to get a syncronised time on each device
  var serverCounterStartTimeMillis = <%= now_millis %>;
  var counterStartTimeMillis = new Date().getTime();
  
  //payment integration IDs
  var zalionPaymentIntegrationId = <%= PaymentMethod::PAYMENT_INTEGRATION_ZALION %>;
  
  var zalionChargeRoomServiceIP = "<%= @zalion_charge_room_service_ip %>";

  var disableAdvancedTouch = <%= GlobalSetting.parsed_setting_for GlobalSetting::DISABLE_ADVANCED_TOUCH, current_outlet, {:fingerprint => @terminal_fingerprint, :user_agent => request.user_agent} %>;

  //enumerate the course labels
  var courseLabels = {};

<% GlobalSetting.course_options(current_outlet).each do |label, course_val| %>
    courseLabels[<%=course_val%>] = "<%=label%>";
<% end %>
    
  var isProcessingTable0Orders = <%= GlobalSetting.parsed_setting_for GlobalSetting::PROCESS_TABLE_0_ORDERS, current_outlet %>;
  
  var loyaltyCardPrefix = "<%= GlobalSetting.parsed_setting_for GlobalSetting::LOYALTY_CARD_PREFIX, current_outlet %>";
  var enableLoyaltyCardRedemption = <%= GlobalSetting.parsed_setting_for GlobalSetting::ENABLE_LOYALTY_REDEMPTION, current_outlet %>;
  var loyaltyPointsPerCurrencyUnit = <%= GlobalSetting.parsed_setting_for GlobalSetting::LOYALTY_POINTS_PER_CURRENCY_UNIT, current_outlet %>;
  
  var halfMeasureLabel = "<%= GlobalSetting.parsed_setting_for GlobalSetting::HALF_MEASURE_LABEL, current_outlet %>";
  
  var allowedZalionSplitPayments = <%= GlobalSetting.parsed_setting_for GlobalSetting::ALLOW_ZALION_SPLIT_PAYMENTS, current_outlet %>;
  
  var currentResolution = "<%= @currentResolution %>";
  var normalResolution = "<%= @normalResolution %>";
  var resolution1360x786 = "<%= @resolution1360x786 %>";
  
  var cashDrawerComPort = "<%= GlobalSetting.parsed_setting_for GlobalSetting::CASH_DRAWER_COM_PORT, current_outlet, {:fingerprint => @terminal_fingerprint} %>";
  var cashDrawerCode = "<%= GlobalSetting.parsed_setting_for GlobalSetting::CASH_DRAWER_CODE, current_outlet, {:fingerprint => @terminal_fingerprint} %>";
  
  var pmShortcut1ID = <%= GlobalSetting.parsed_setting_for GlobalSetting::PM_SHORTCUT_ID, current_outlet, {:shortcut_num => 1} %>;
  var pmShortcut2ID = <%= GlobalSetting.parsed_setting_for GlobalSetting::PM_SHORTCUT_ID, current_outlet, {:shortcut_num => 2} %>;
  var pmShortcut3ID = <%= GlobalSetting.parsed_setting_for GlobalSetting::PM_SHORTCUT_ID, current_outlet, {:shortcut_num => 3} %>;
  
  var pmShortcutMap = {};
  
  pmShortcutMap[1] = pmShortcut1ID;
  pmShortcutMap[2] = pmShortcut2ID;
  pmShortcutMap[3] = pmShortcut3ID;
  
  var globalAutoPromptForCovers = <%= GlobalSetting.parsed_setting_for GlobalSetting::PROMPT_FOR_COVERS, current_outlet %>;
  
  var clueyUserId = <%= Employee.cluey_user(current_outlet).id %>;
  
  var printLocalDeliveryReceipts = <%= GlobalSetting.parsed_setting_for GlobalSetting::PRINT_LOCAL_RECIEVE_DELIVERY, current_outlet, {:fingerprint => @terminal_fingerprint} %>;
  
  var printDelegateTerminalID = "<%= GlobalSetting.parsed_setting_for GlobalSetting::PRINT_DELEGATE_TERMINAL_ID, current_outlet %>";
</script>